TODO
2. language is conjunctive, T/F letter case inconsistent

3. prepare slides, show our schemas, db relations. Example queries, unfording processes


An working example:

Select all the name of the romantic movies casted by straight actors who have nominated an Oscar award

ans(title)<-Movie(imdb_title_id,title,_,"Romance",_,_,_);Principal(imdb_title_id,imdb_name_id,"actor");Nominee(imdb_name_id,name,_,_,_,_,_,"Straight","FALSE")

                
                Movie,Principal,Nominee

                For Movie:
                _,_,_,"Romance",_,_,_
                
                For Principal:
                _,_,"actor"    
                
                For Nominee:
                _,_,_,_,_,_,_,"Straight","FALSE"  
                
                

The final joint sql query looks like:

SELECT *
FROM
    (SELECT ... FROM ... WHERE ...) t1
    INNER JOIN
    (SELECT ... FROM ... WHERE ...) t2
    ON t1.key = t2.key
    INNER JOIN
    (SELECT ... FROM ... WHERE ...) t3
    ON t2.key = t3.ket
;


















-------------------------DATA Transformation------------------------ 
UPDATE movies
SET worldwide_gross_income=replace(worldwide_gross_income,"GBP ",'');

UPDATE movies
SET worldwide_gross_income=replace(worldwide_gross_income,"PKR ",'');

UPDATE movies
SET worldwide_gross_income=replace(worldwide_gross_income,"NPR ",'');

UPDATE movies
SET worldwide_gross_income=replace(worldwide_gross_income,"INR ",'');

UPDATE movies
SET worldwide_gross_income=replace(worldwide_gross_income,'$','');

UPDATE movies
SET budget=replace(budget,"ITL ",'');

UPDATE movies
SET budget=replace(budget,"ROL ",'');

UPDATE movies
SET budget=replace(budget,"SEK ",'');

UPDATE movies
SET budget=replace(budget,"FRF ",'');

UPDATE movies
SET budget=replace(budget,"NOK ",'');

UPDATE movies
SET budget=replace(budget,"DEM ",'');

UPDATE movies
SET budget=replace(budget,'$','');

UPDATE movies 
SET genre = substr( genre, 0, instr(genre, ','))
WHERE instr(genre, ',') > 0;

UPDATE the_oscar_award 
SET award_category = substr( award_category, 0, instr(award_category, '(') - 1)
WHERE instr(award_category, '(') > 0;

UPDATE oscar_personnel
SET award_category=replace(award_category,"Best Director",'DIRECTING');

UPDATE oscar_personnel
SET award_category=replace(award_category,"Best Actor",'ACTOR');

UPDATE oscar_personnel
SET award_category=replace(award_category,"Best Actress",'ACTRESS');

UPDATE oscar_personnel
SET award_category=replace(award_category,"Best Supporting Actor",'ACTOR IN A SUPPORTING ROLE');

UPDATE oscar_personnel
SET award_category=replace(award_category,"Best Supporting Actress",'ACTRESS IN A SUPPORTING ROLE');






--------------------Debug----------------


SELECT DISTINCT title
FROM
(SELECT movies.imdb_title_id, movies.title, movies.year_film, movies.genre, movies.duration, movies.country, movies.language FROM movies WHERE genre="Romance") t0
INNER JOIN
(SELECT title_principals.imdb_title_id, title_principals.imdb_name_id, title_principals.job_category FROM title_principals WHERE job_category="actor") t1
ON t0.imdb_title_id = t1.imdb_title_id
INNER JOIN
(SELECT names.imdb_name_id, names.name, names.height FROM names ) t2
ON t1.imdb_name_id = t2.imdb_name_id
INNER JOIN
(SELECT oscar_personnel.won, oscar_personnel.place_of_birth, oscar_personnel.date_of_birth, oscar_personnel.race, oscar_personnel.religion, oscar_personnel.sexual_orientation, oscar_personnel.name FROM oscar_personnel WHERE won="FALSE" AND sexual_orientation="Straight") t3
ON t2.name = t3.name
;


SELECT DISTINCT title, avg_vote
FROM
(SELECT the_oscar_award.year_ceremony, the_oscar_award.title, the_oscar_award.won FROM the_oscar_award WHERE won="True") t0
INNER JOIN
(SELECT movies.imdb_title_id, movies.title, movies.avg_vote FROM movies ) t1
USING (title)
INNER JOIN
(SELECT title_principals.imdb_title_id, title_principals.imdb_name_id, title_principals.job_category FROM title_principals ) t2
USING (imdb_title_id)
INNER JOIN
(SELECT names.imdb_name_id, names.name, names.height FROM names ) t3
USING (imdb_name_id)
INNER JOIN
(SELECT oscar_personnel.won, oscar_personnel.place_of_birth, oscar_personnel.date_of_birth, oscar_personnel.race, oscar_personnel.religion, oscar_personnel.sexual_orientation, oscar_personnel.name FROM oscar_personnel WHERE religion="Jewish") t4
USING (name)
;


ans(*)<-Oscar_movie_rating(imdb_title_id,_,_,_);Principal(imdb_name_id,imdb_title_id,_);Nominee(imdb_name_id,_,_,_,_,_,"Jewish",_,_)